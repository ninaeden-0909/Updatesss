/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package secure.sms;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import users.User;
import users.UserDAOImpl;


/**
 *
 * @author Lenovo
 */
public class CreateUserGUI extends javax.swing.JDialog {
    UserDAOImpl userDAOImpl = new UserDAOImpl();
    private User user = null;
    /**
     * Creates new form createUserGUI
     */
    public CreateUserGUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        refreshUsersTBL();
    }
    public void setUpdate(User user) {
    this.user = user;

    usernameTF.setText(user.getUsername());
    passwordTF.setText(user.getPassword());
    
    saveBTN.setText("Update");
    }
    
    public void refreshUsersTBL(){
        DefaultTableModel model = (DefaultTableModel) usersTBL.getModel();
        model.setRowCount(0);
        personnelRB.setSelected(true);
        usernameTF.setEditable(true);
        
        for(User user : userDAOImpl.read_all()){
            model.addRow(new Object[]{
                user.getUser_id(), 
                user.getUsername(),
                user.getRole(),
                user.getPassword()
            });
        }
    }
    public void resetUsersTab(){
        refreshUsersTBL();
        usernameTF.setText("");
        passwordTF.setText("");
        saveBTN.setText("Save");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        createUserPUM = new javax.swing.JPopupMenu();
        updateMI = new javax.swing.JMenuItem();
        deleteMI = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        usersTBL = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        usernameTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        passwordTF = new javax.swing.JTextField();
        saveBTN = new javax.swing.JButton();
        cancelBTN = new javax.swing.JButton();
        adminRB = new javax.swing.JRadioButton();
        personnelRB = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();

        updateMI.setText("Update");
        updateMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateMIActionPerformed(evt);
            }
        });
        createUserPUM.add(updateMI);

        deleteMI.setText("Delete");
        deleteMI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMIActionPerformed(evt);
            }
        });
        createUserPUM.add(deleteMI);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add User");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        usersTBL.setBackground(new java.awt.Color(204, 204, 255));
        usersTBL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "User_id", "Username", "Role", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        usersTBL.setGridColor(new java.awt.Color(0, 0, 0));
        usersTBL.setSelectionBackground(new java.awt.Color(255, 255, 255));
        usersTBL.setSelectionForeground(new java.awt.Color(255, 255, 255));
        usersTBL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                usersTBLMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(usersTBL);
        if (usersTBL.getColumnModel().getColumnCount() > 0) {
            usersTBL.getColumnModel().getColumn(0).setResizable(false);
            usersTBL.getColumnModel().getColumn(1).setResizable(false);
            usersTBL.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)), "Add User"));

        jLabel1.setText("Username:");

        jLabel2.setText("Password:");

        saveBTN.setBackground(new java.awt.Color(242, 242, 242));
        saveBTN.setText("Save");
        saveBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBTNActionPerformed(evt);
            }
        });

        cancelBTN.setBackground(new java.awt.Color(242, 242, 242));
        cancelBTN.setText("Cancel");
        cancelBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBTNActionPerformed(evt);
            }
        });

        adminRB.setText("Admin");

        personnelRB.setText("Personnel");
        personnelRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personnelRBActionPerformed(evt);
            }
        });

        jLabel3.setText("Username:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(personnelRB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(adminRB)
                        .addContainerGap(37, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usernameTF)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(saveBTN)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancelBTN))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(passwordTF)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(personnelRB)
                    .addComponent(adminRB))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(passwordTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelBTN)
                    .addComponent(saveBTN))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void saveBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBTNActionPerformed
        // TODO add your handling code here:
        String username = usernameTF.getText();
        String role = personnelRB.isSelected() ? "Personnel" : "Admin";
        System.out.println(role);
        String password = passwordTF.getText();
        
        if(username.equals("") || password.equals("")|| role.equals("")){
            JOptionPane.showMessageDialog(null, 
                        "All fields are required!", 
                        "Message", 
                        JOptionPane.ERROR_MESSAGE);
            
            return;
        } 
        
        if(saveBTN.getText().equals("Save")){
            int option = JOptionPane.showConfirmDialog(null, 
                    "This will save the entries currently on the form. Are you sure?", 
                    "Confirmation",
                    JOptionPane.OK_CANCEL_OPTION);

            if(option == JOptionPane.OK_OPTION){
                User user = new User(0, username,role, password);
                if(userDAOImpl.create(user) == true){
                    JOptionPane.showMessageDialog(null, 
                            "New user has been saved!", 
                            "Message", 
                            JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, 
                            "User was not saved!", 
                            "Message", 
                            JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            int option = JOptionPane.showConfirmDialog(null, 
                    "This will update the entries currently on the form. Are you sure?", 
                    "Confirmation",
                    JOptionPane.OK_CANCEL_OPTION);

            if(option == JOptionPane.OK_OPTION){
                this.user.setUsername(username);
                this.user.setRole(role);
                this.user.setPassword(password);
                
                if(userDAOImpl.update(this.user) == true){
                    JOptionPane.showMessageDialog(null, 
                            "User has been updated!", 
                            "Message", 
                            JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, 
                            "User was not updated!", 
                            "Message", 
                            JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        
        resetUsersTab();
        refreshUsersTBL();
    }//GEN-LAST:event_saveBTNActionPerformed

    private void cancelBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBTNActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_cancelBTNActionPerformed

    private void usersTBLMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usersTBLMouseReleased
        // TODO add your handling code here:
        if(evt.isPopupTrigger()){
            int row = usersTBL.rowAtPoint(evt.getPoint());
            if(row<=0){
                usersTBL.setRowSelectionInterval(row, row);
                
            }
            createUserPUM.show(usersTBL, evt.getX(), evt.getY());
        
        }
    }//GEN-LAST:event_usersTBLMouseReleased

    private void updateMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateMIActionPerformed
        // TODO add your handling code here:
        saveBTN.setText("Update");
        DefaultTableModel model = (DefaultTableModel) usersTBL.getModel();
        int user_id = Integer.parseInt(model.getValueAt(usersTBL.getSelectedRow(), 0).toString());
        this.user = userDAOImpl.read_one(user_id);
        
        usernameTF.setText(user.getUsername());
        if(user.getRole().equals("Cashier")){
            personnelRB.setSelected(true);
        } else {
            adminRB.setSelected(true);
        }
        passwordTF.setText(user.getPassword());
    }//GEN-LAST:event_updateMIActionPerformed

    private void deleteMIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMIActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) usersTBL.getModel();
        int user_id = Integer.parseInt(model.getValueAt(usersTBL.getSelectedRow(), 0).toString());
        
        int option = JOptionPane.showConfirmDialog(null, 
                "This will delete the record permanently. Are you sure?", 
                "Confirmation", 
                JOptionPane.OK_CANCEL_OPTION);
        
        if(option == JOptionPane.OK_OPTION){
            if(userDAOImpl.delete(user_id) == true){
                JOptionPane.showMessageDialog(null, 
                        "User was deleted!", 
                        "Message", 
                        JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, 
                        "User was not deleted!", 
                        "Message", 
                        JOptionPane.ERROR_MESSAGE);
            }
        }
        
        resetUsersTab();
    }//GEN-LAST:event_deleteMIActionPerformed

    private void personnelRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personnelRBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_personnelRBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateUserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateUserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateUserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateUserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CreateUserGUI dialog = new CreateUserGUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton adminRB;
    private javax.swing.JButton cancelBTN;
    private javax.swing.JPopupMenu createUserPUM;
    private javax.swing.JMenuItem deleteMI;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField passwordTF;
    private javax.swing.JRadioButton personnelRB;
    private javax.swing.JButton saveBTN;
    private javax.swing.JMenuItem updateMI;
    private javax.swing.JTextField usernameTF;
    private javax.swing.JTable usersTBL;
    // End of variables declaration//GEN-END:variables
}
